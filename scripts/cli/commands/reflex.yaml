command: reflex
subcommands:
  create:
    endpoint: workspaces/{workspace_id}/reflexes
    method: post
    description: Create a reflex.
    panel: reflex
    custom_payload:
      value: |
        "definition": {
          "parts": [
            {
              "path": "ReflexEntities.json",
              "payload": ReflexEntities,
              "payloadType": "InlineBase64"
            },
            {
              "path": ".platform",
              "payload": platform,
              "payloadType": "InlineBase64"
            }
          ]
        }
    args:
      - name: workspace-id
        type: str
        required: true
        arg_type: path
        description: The id of the workspace to create the reflex in.
      - name: display-name
        type: str
        required: true
        arg_type: payload
        description: The display name of the reflex.
      - name: reflex-path
        type: str
        required: true
        arg_type: load_content
        content_files:
          - ReflexEntities.json
          - .platform
        description: The path to the reflex to load content from.
      - name: description
        type: str
        required: false
        arg_type: payload
        description: The description of the reflex.
      - name: await-lro
        type: bool
        required: false
        default: false
        arg_type: lro
        description: Whether to await the long running operation.

  get:
    endpoint: workspaces/{workspace_id}/reflexes/{reflex_id}
    method: get
    description: Get a reflex.
    panel: reflex
    args:
      - name: workspace-id
        type: str
        required: true
        arg_type: path
        description: The id of the workspace to get the reflex from.
      - name: reflex-id
        type: str
        required: true
        arg_type: path
        description: The id of the reflex to get.

  list:
    endpoint: workspaces/{workspace_id}/reflexes
    method: get
    description: List reflexes for a workspace.
    panel: reflex
    args:
      - name: workspace-id
        type: str
        required: true
        arg_type: path
        description: The id of the workspace to list reflexes for.
      - name: continuation-token
        type: str
        required: false
        arg_type: query
        description: A token for retrieving the next page of results.

  update:
    endpoint: workspaces/{workspace_id}/reflexes/{reflex_id}
    method: patch
    description: Update a reflex.
    panel: reflex
    args:
      - name: workspace-id
        type: str
        required: true
        arg_type: path
        description: The id of the workspace to update.
      - name: reflex-id
        type: str
        required: true
        arg_type: path
        description: The id of the reflex to update.
      - name: display-name
        type: str
        required: false
        arg_type: payload
        arg_group_type_id: at-least-1
        description: The display name of the reflex.
      - name: description
        type: str
        required: false
        arg_type: payload
        arg_group_type_id: at-least-1
        description: The description of the reflex.

  delete:
    endpoint: workspaces/{workspace_id}/reflexes/{reflex_id}
    method: delete
    description: Delete a reflex.
    panel: reflex
    args:
      - name: workspace-id
        type: str
        required: true
        arg_type: path
        description: The id of the workspace to delete.
      - name: reflex-id
        type: str
        required: true
        arg_type: path
        description: The id of the reflex to delete.

  get-definition:
    endpoint: workspaces/{workspace_id}/reflexes/{reflex_id}/getDefinition
    method: get
    description: Get the definition of a reflex.
    panel: reflexDefinition
    args:
      - name: workspace-id
        type: str
        required: true
        arg_type: path
        description: The id of the workspace to get the reflex definition from.
      - name: reflex-id
        type: str
        required: true
        arg_type: path
        description: The id of the reflex to get the definition from.
      - name: format
        type: str
        required: false
        arg_type: query
        description: The format of the reflex definition. Supported format is \"ipynb\".
      - name: await-lro
        type: bool
        required: false
        default: false
        arg_type: lro
        description: Whether to await the long running operation.

  update-definition:
    endpoint: workspaces/{workspace_id}/reflexes/{reflex_id}/updateDefinition
    method: post
    description: Update the definition of a reflex.
    panel: reflexDefinition
    custom_payload:
      value: |
        "definition": {
          "parts": [
            {
              "path": "ReflexEntities.json",
              "payload": ReflexEntities,
              "payloadType": "InlineBase64"
            },
            {
              "path": ".platform",
              "payload": platform,
              "payloadType": "InlineBase64"
            }
          ]
        }   
    args:
      - name: workspace-id
        type: str
        required: true
        arg_type: path
        description: The id of the workspace to update.
      - name: reflex-id
        type: str
        required: true
        arg_type: path
        description: The id of the reflex to update.
      - name: reflex-path
        type: str
        required: true
        arg_type: load_content
        content_files:
          - ReflexEntities.json
          - .platform        
        description: The path to the reflex to load content from.
      - name: update-metadata
        type: bool
        required: false
        default: false
        arg_type: query
        description: When set to true, the item's metadata is updated using the metadata in the .platform file.
      - name: await-lro
        type: bool
        required: false
        default: false
        arg_type: lro
        description: Whether to await the long running operation.

